{"remainingRequest":"C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\l\\Desktop\\项目\\boke2\\src\\components\\logo\\center.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\l\\Desktop\\项目\\boke2\\src\\components\\logo\\center.vue","mtime":1579526740788},{"path":"C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577982391412},{"path":"C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\babel-loader\\lib\\index.js","mtime":1577982412453},{"path":"C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577982391412},{"path":"C:\\Users\\l\\Desktop\\项目\\boke2\\node_modules\\vue-loader\\lib\\index.js","mtime":1577982408913}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var _this2 = this;\n\n    var checkAge = function checkAge(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('手机号不能为空'));\n      }\n\n      setTimeout(function () {\n        var telStr = /^[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,8,9]))[0-9]{8}$/;\n\n        if (!telStr.test(value)) {\n          callback(new Error('请输入正确的手机号'));\n        } else {\n          callback();\n        }\n      }, 1000);\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (_this2.ruleForm.checkPass !== '') {\n          _this2.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this2.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        pass: '',\n        checkPass: '',\n        name: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        name: [{\n          validator: checkAge,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$router.push('/');\n    },\n    submitForm: function submitForm(formName, api) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        console.log(valid);\n\n        if (valid) {\n          if (_this3.ruleForm.name && _this3.ruleForm.checkPass) {\n            _this3.$store.dispatch('uesrlogo', {\n              'api': api,\n              'username': _this3.ruleForm.name,\n              'password': _this3.ruleForm.checkPass\n            });\n\n            var _this = _this3;\n            setTimeout(function () {\n              _this.$router.push('/logo');\n            }, 200);\n          } else {\n            alert('账号密码不能为空');\n          }\n        } else {\n          console.log('验证失败');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields(); //重置\n    }\n  }\n};",{"version":3,"sources":["center.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n  <el-page-header @back=\"goBack()\" content=\"\"></el-page-header>\r\n  <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"\" id=\"demo_ruleForm\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"\" prop=\"name\">\r\n              <el-input  v-model=\"ruleForm.name\">\r\n                 <template slot=\"prepend\">手机号</template>\r\n              </el-input>\r\n        </el-form-item>\r\n      \r\n\r\n        <el-form-item label=\"\" prop=\"pass\">\r\n            <el-input  type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\">\r\n                 <template slot=\"prepend\">密**码 </template>\r\n            </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"\" prop=\"checkPass\">\r\n             <el-input  type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\">\r\n                 <template slot=\"prepend\">确认密码 </template>\r\n            </el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item class=\"form-button\">\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm','userLogin')\">登录</el-button>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm','setUser')\">立即注册</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</div>\r\n    \r\n</template>\r\n\r\n\r\n<script>\r\n  export default {\r\n     data() {\r\n      var checkAge = (rule, value, callback) => {\r\n        if (!value) {\r\n          return callback(new Error('手机号不能为空'));\r\n        }\r\n        setTimeout(() => {\r\n          var telStr = /^[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,8,9]))[0-9]{8}$/;\r\n          if (!(telStr.test(value))) {\r\n            callback(new Error('请输入正确的手机号'));\r\n          } else {\r\n              callback();\r\n            }\r\n        }, 1000);\r\n      };\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.ruleForm.pass) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        ruleForm: {\r\n          pass: '',\r\n          checkPass: '',\r\n          name: ''\r\n        },\r\n        rules: {\r\n          pass: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          checkPass: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          name: [\r\n            { validator: checkAge, trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n       goBack(){\r\n        this.$router.push('/')\r\n      },\r\n      submitForm(formName,api) {\r\n        this.$refs[formName].validate((valid) => {\r\n          console.log(valid)\r\n          if (valid) {\r\n            if(this.ruleForm.name&&this.ruleForm.checkPass){\r\n              this.$store.dispatch('uesrlogo',{'api':api,'username':this.ruleForm.name,'password':this.ruleForm.checkPass});\r\n              let _this = this;\r\n              setTimeout(function(){\r\n                _this.$router.push('/logo');\r\n              },200)\r\n            }else{\r\n              alert('账号密码不能为空')\r\n            }\r\n          } else {\r\n            console.log('验证失败')\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();//重置\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n   #demo_ruleForm{\r\n     padding:  300px  40px 40px  40px;\r\n     \r\n    .form-button{\r\n        text-align: center;\r\n    }\r\n    .el-form-item is-error{\r\n      line-height: 40px;\r\n    }\r\n\r\n    .el-button--primary {\r\n        color: #FFF;\r\n        background-color: #d087ca;\r\n        border-color: #409EFF;\r\n        \r\n    }\r\n    .el-form-item{\r\n      margin-bottom: 10px;\r\n      color: #e44141e0;\r\n    }\r\n   \r\n     \r\n   }\r\n\r\n</style>\r\n\r\n"],"sourceRoot":"src/components/logo"}]}